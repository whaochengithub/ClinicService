
package edu.stevens.cs548.clinic.service.web.soap.patient;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "PatientWebService", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/patient", wsdlLocation = "file:/Users/whaochen/Documents/workspace548/ClinicSoapWebServiceClient/src/main/resources/PatientWebService.wsdl")
public class PatientWebService
    extends Service
{

    private final static URL PATIENTWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException PATIENTWEBSERVICE_EXCEPTION;
    private final static QName PATIENTWEBSERVICE_QNAME = new QName("http://cs548.stevens.edu/clinic/service/web/soap/patient", "PatientWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/whaochen/Documents/workspace548/ClinicSoapWebServiceClient/src/main/resources/PatientWebService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PATIENTWEBSERVICE_WSDL_LOCATION = url;
        PATIENTWEBSERVICE_EXCEPTION = e;
    }

    public PatientWebService() {
        super(__getWsdlLocation(), PATIENTWEBSERVICE_QNAME);
    }

    public PatientWebService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PATIENTWEBSERVICE_QNAME, features);
    }

    public PatientWebService(URL wsdlLocation) {
        super(wsdlLocation, PATIENTWEBSERVICE_QNAME);
    }

    public PatientWebService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PATIENTWEBSERVICE_QNAME, features);
    }

    public PatientWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PatientWebService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IPatientWebPort
     */
    @WebEndpoint(name = "PatientWebPort")
    public IPatientWebPort getPatientWebPort() {
        return super.getPort(new QName("http://cs548.stevens.edu/clinic/service/web/soap/patient", "PatientWebPort"), IPatientWebPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IPatientWebPort
     */
    @WebEndpoint(name = "PatientWebPort")
    public IPatientWebPort getPatientWebPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://cs548.stevens.edu/clinic/service/web/soap/patient", "PatientWebPort"), IPatientWebPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PATIENTWEBSERVICE_EXCEPTION!= null) {
            throw PATIENTWEBSERVICE_EXCEPTION;
        }
        return PATIENTWEBSERVICE_WSDL_LOCATION;
    }

}
