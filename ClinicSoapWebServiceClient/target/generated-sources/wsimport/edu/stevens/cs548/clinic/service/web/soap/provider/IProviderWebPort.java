
package edu.stevens.cs548.clinic.service.web.soap.provider;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import edu.stevens.cs548.clinic.service.dto.ProviderDto;
import edu.stevens.cs548.clinic.service.dto.TreatmentDto;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IProviderWebPort", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider")
@XmlSeeAlso({
    edu.stevens.cs548.clinic.service.dto.ObjectFactory.class,
    edu.stevens.cs548.clinic.service.web.soap.patient.ObjectFactory.class,
    edu.stevens.cs548.clinic.service.web.soap.provider.ObjectFactory.class
})
public interface IProviderWebPort {


    /**
     * 
     * @param providerDto
     * @return
     *     returns long
     * @throws ProviderServiceExn_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addProvider", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider", className = "edu.stevens.cs548.clinic.service.web.soap.provider.AddProvider")
    @ResponseWrapper(localName = "addProviderResponse", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider", className = "edu.stevens.cs548.clinic.service.web.soap.provider.AddProviderResponse")
    @Action(input = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/addProviderRequest", output = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/addProviderResponse", fault = {
        @FaultAction(className = ProviderServiceExn_Exception.class, value = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/addProvider/Fault/ProviderServiceExn")
    })
    public long addProvider(
        @WebParam(name = "provider-dto", targetNamespace = "http://cs548.stevens.edu/clinic/service/dto")
        ProviderDto providerDto)
        throws ProviderServiceExn_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns edu.stevens.cs548.clinic.service.dto.ProviderDto
     * @throws ProviderServiceExn_Exception
     */
    @WebMethod
    @WebResult(name = "provider-dto", targetNamespace = "http://cs548.stevens.edu/clinic/service/dto")
    @RequestWrapper(localName = "getProviderByDbId", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider", className = "edu.stevens.cs548.clinic.service.web.soap.provider.GetProviderByDbId")
    @ResponseWrapper(localName = "getProviderByDbIdResponse", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider", className = "edu.stevens.cs548.clinic.service.web.soap.provider.GetProviderByDbIdResponse")
    @Action(input = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/getProviderByDbIdRequest", output = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/getProviderByDbIdResponse", fault = {
        @FaultAction(className = ProviderServiceExn_Exception.class, value = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/getProviderByDbId/Fault/ProviderServiceExn")
    })
    public ProviderDto getProviderByDbId(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0)
        throws ProviderServiceExn_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns edu.stevens.cs548.clinic.service.dto.ProviderDto
     * @throws ProviderServiceExn_Exception
     */
    @WebMethod
    @WebResult(name = "provider-dto", targetNamespace = "http://cs548.stevens.edu/clinic/service/dto")
    @RequestWrapper(localName = "getProviderByNPI", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider", className = "edu.stevens.cs548.clinic.service.web.soap.provider.GetProviderByNPI")
    @ResponseWrapper(localName = "getProviderByNPIResponse", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider", className = "edu.stevens.cs548.clinic.service.web.soap.provider.GetProviderByNPIResponse")
    @Action(input = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/getProviderByNPIRequest", output = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/getProviderByNPIResponse", fault = {
        @FaultAction(className = ProviderServiceExn_Exception.class, value = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/getProviderByNPI/Fault/ProviderServiceExn")
    })
    public ProviderDto getProviderByNPI(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0)
        throws ProviderServiceExn_Exception
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "siteInfo", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider", className = "edu.stevens.cs548.clinic.service.web.soap.patient.SiteInfo")
    @ResponseWrapper(localName = "siteInfoResponse", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider", className = "edu.stevens.cs548.clinic.service.web.soap.patient.SiteInfoResponse")
    @Action(input = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/siteInfoRequest", output = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/siteInfoResponse")
    public String siteInfo();

    /**
     * 
     * @param treatmentDto
     * @return
     *     returns long
     * @throws ProviderServiceExn_Exception
     * @throws ProviderNotFoundExn_Exception
     * @throws PatientNotFoundExn
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addTreatmentForPatient", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider", className = "edu.stevens.cs548.clinic.service.web.soap.provider.AddTreatmentForPatient")
    @ResponseWrapper(localName = "addTreatmentForPatientResponse", targetNamespace = "http://cs548.stevens.edu/clinic/service/web/soap/provider", className = "edu.stevens.cs548.clinic.service.web.soap.provider.AddTreatmentForPatientResponse")
    @Action(input = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/addTreatmentForPatientRequest", output = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/addTreatmentForPatientResponse", fault = {
        @FaultAction(className = PatientNotFoundExn.class, value = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/addTreatmentForPatient/Fault/PatientNotFoundExn"),
        @FaultAction(className = ProviderNotFoundExn_Exception.class, value = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/addTreatmentForPatient/Fault/ProviderNotFoundExn"),
        @FaultAction(className = ProviderServiceExn_Exception.class, value = "http://cs548.stevens.edu/clinic/service/web/soap/provider/IProviderWebPort/addTreatmentForPatient/Fault/ProviderServiceExn")
    })
    public long addTreatmentForPatient(
        @WebParam(name = "treatment-dto", targetNamespace = "http://cs548.stevens.edu/clinic/service/dto")
        TreatmentDto treatmentDto)
        throws PatientNotFoundExn, ProviderNotFoundExn_Exception, ProviderServiceExn_Exception
    ;

}
